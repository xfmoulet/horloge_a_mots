// horloge a mots data - file generated by build.rs
#[derive(Debug, Clone, Copy, PartialEq)]
pub enum LED {
    IlEst,
    Une,
    Deux,
    Trois,
    Quatre,
    Cinq,
    Six,
    Sept,
    Huit,
    Neuf,
    Onze,
    Mi,
    Di,
    X,
    Minuit,
    Heure,
    S,
    Et,
    Moins,
    DixMin,
    Vingt,
    CinqMin,
    Le,
    Quart,
    Demi,
    E,
    EtDes,
    Bananes,
    Dot1,
    Dot2,
    Dot3,
    Dot4,
}
pub static LED_POSITIONS: [(u8, u8); 32] = [
    (3, 0), // IlEst
    (3, 1), // Une
    (0, 0), // Deux
    (1, 0), // Trois
    (4, 0), // Quatre
    (1, 1), // Cinq
    (2, 1), // Six
    (0, 1), // Sept
    (5, 1), // Huit
    (4, 1), // Neuf
    (3, 2), // Onze
    (5, 2), // Mi
    (4, 2), // Di
    (2, 0), // X
    (0, 2), // Minuit
    (2, 2), // Heure
    (1, 2), // S
    (1, 3), // Et
    (4, 3), // Moins
    (3, 3), // DixMin
    (0, 3), // Vingt
    (5, 3), // CinqMin
    (2, 3), // Le
    (4, 4), // Quart
    (2, 4), // Demi
    (0, 4), // E
    (3, 4), // EtDes
    (5, 5), // Bananes
    (4, 5), // Dot1
    (3, 5), // Dot2
    (2, 5), // Dot3
    (0, 5), // Dot4
];
// ---
pub const NB_HOURS_LED : usize = 7;
pub static HOURS_LED: [[Option<LED>;NB_HOURS_LED];24] = [
    [Some(LED::Minuit), Some(LED::Minuit), Some(LED::Minuit), None, None, None, None, ],
    [Some(LED::Une), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), None, None, None, ],
    [Some(LED::Deux), Some(LED::Deux), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Trois), Some(LED::Trois), Some(LED::Trois), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), ],
    [Some(LED::Quatre), Some(LED::Quatre), Some(LED::Quatre), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), ],
    [Some(LED::Cinq), Some(LED::Cinq), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Six), Some(LED::Six), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Sept), Some(LED::Sept), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Huit), Some(LED::Huit), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Neuf), Some(LED::Neuf), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Di), Some(LED::X), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Onze), Some(LED::Onze), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Mi), Some(LED::Di), None, None, None, None, None, ],
    [Some(LED::Une), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), None, None, None, ],
    [Some(LED::Deux), Some(LED::Deux), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Trois), Some(LED::Trois), Some(LED::Trois), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), ],
    [Some(LED::Quatre), Some(LED::Quatre), Some(LED::Quatre), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), ],
    [Some(LED::Cinq), Some(LED::Cinq), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Six), Some(LED::Six), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Sept), Some(LED::Sept), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Huit), Some(LED::Huit), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Neuf), Some(LED::Neuf), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Di), Some(LED::X), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
    [Some(LED::Onze), Some(LED::Onze), Some(LED::Heure), Some(LED::Heure), Some(LED::Heure), Some(LED::S), None, ],
];
// ---
pub const NB_MIN5_LED : usize = 8;
pub static MIN5_LED: [[Option<LED>;NB_MIN5_LED];12] = [
    [None, None, None, None, None, None, None, None, ],
    [Some(LED::CinqMin), Some(LED::CinqMin), None, None, None, None, None, None, ],
    [Some(LED::DixMin), Some(LED::DixMin), None, None, None, None, None, None, ],
    [Some(LED::Et), Some(LED::Et), Some(LED::Quart), Some(LED::Quart), Some(LED::Quart), None, None, None, ],
    [Some(LED::Vingt), Some(LED::Vingt), Some(LED::Vingt), None, None, None, None, None, ],
    [Some(LED::Vingt), Some(LED::Vingt), Some(LED::Vingt), Some(LED::CinqMin), Some(LED::CinqMin), None, None, None, ],
    [Some(LED::Et), Some(LED::Et), Some(LED::Demi), Some(LED::Demi), Some(LED::E), None, None, None, ],
    [Some(LED::Moins), Some(LED::Moins), Some(LED::Moins), Some(LED::Vingt), Some(LED::Vingt), Some(LED::Vingt), Some(LED::CinqMin), Some(LED::CinqMin), ],
    [Some(LED::Moins), Some(LED::Moins), Some(LED::Moins), Some(LED::Vingt), Some(LED::Vingt), Some(LED::Vingt), None, None, ],
    [Some(LED::Moins), Some(LED::Moins), Some(LED::Moins), Some(LED::Le), Some(LED::Quart), Some(LED::Quart), Some(LED::Quart), None, ],
    [Some(LED::Moins), Some(LED::Moins), Some(LED::Moins), Some(LED::DixMin), Some(LED::DixMin), None, None, None, ],
    [Some(LED::Moins), Some(LED::Moins), Some(LED::Moins), Some(LED::CinqMin), Some(LED::CinqMin), None, None, None, ],
];
// ---
pub const NB_MINUTES_LED : usize = 1;
pub static MINUTES_LED: [[Option<LED>;NB_MINUTES_LED];5] = [
    [None, ],
    [Some(LED::Dot1), ],
    [Some(LED::Dot2), ],
    [Some(LED::Dot3), ],
    [Some(LED::Dot4), ],
];
// ---
// Interleaving patterns for 32 values and 32 ticks
pub const INTERLEAVE_PATTERNS: [u32;32] = [
    0b00000000000000000000000000000000,
    0b00000000000000000000000000000001,
    0b00000000000000010000000000000001,
    0b00000000001000000000010000000001,
    0b00000001000000010000000100000001,
    0b00000010000010000001000001000001,
    0b00000100001000010000010000100001,
    0b00001000010001000010001000010001,
    0b00010001000100010001000100010001,
    0b00010001001000100100010010001001,
    0b00010010010010010001001001001001,
    0b00100100100100100100100100100101,
    0b00100101001001010010010100100101,
    0b00101001010010100101001010010101,
    0b00101010010101010010101001010101,
    0b00101010101010100101010101010101,
    0b01010101010101010101010101010101,
    0b01010101010101011010101010101011,
    0b01010101101010110101010110101011,
    0b01010110101101011010110101101011,
    0b01011011010110110101101101011011,
    0b01011011011011011011011011011011,
    0b01101101101101110110110110110111,
    0b01101110110111011011101101110111,
    0b01110111011101110111011101110111,
    0b01110111101110111101110111101111,
    0b01111011110111110111101111011111,
    0b01111101111101111110111110111111,
    0b01111111011111110111111101111111,
    0b01111111110111111111101111111111,
    0b01111111111111110111111111111111,
    0b01111111111111111111111111111111,
];